type: remote_edu
files:
- name: main.go
  visible: true
  text: "package main\n\nimport (\n\t\"bufio\"\n\t\"log\"\n\t\"os\"\n)\n\nfunc main()\
    \ {\n\tquote := readQuote() // today's quote\n\tfile, err := os.Create(\"quote.txt\"\
    )\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// TODO: write the quote to\
    \ a file\n\n}\n\nfunc readQuote() string {\n\tscanner := bufio.NewScanner(os.Stdin)\n\
    \tscanner.Split(bufio.ScanLines)\n\t_ = scanner.Scan()\n\treturn scanner.Text()\n\
    }\n"
  learner_created: false
- name: tests.py
  visible: false
  text: |
    import os

    from hstest import StageTest, CheckResult, WrongAnswer, TestCase

    inputs = [
        "You canâ€™t be a friendly neighborhood spider-man if there is no neighborhood.",
        "Sometimes to do what is right we have to give up the things we want the most even our dreams.",
        "Every day I wake up knowing that the more people I try to save. The more enemies I will make.",
    ]

    FILENAME = "quote.txt"


    class TestAdmissionProcedure(StageTest):
        def generate(self):
            return [TestCase(stdin=[test], attach=[test]) for test in inputs]

        def check(self, reply: str, attach: list):
            if not os.path.exists(FILENAME):
                raise WrongAnswer("Cannot file test.txt file")

            with open(FILENAME, "r") as f:
                content = f.read().strip()
                if content != attach[0]:
                    raise WrongAnswer(
                        f'Invalid content of {FILENAME} file, got "{content}" want "{attach[0]}"'
                    )

            return CheckResult.correct()


    if __name__ == '__main__':
        TestAdmissionProcedure().run_tests()
  learner_created: false
feedback_link: https://hyperskill.org/learn/step/18236#comment
check_profile: hyperskill_go
status: Solved
feedback:
  message: <html>Correct solution</html>
  time: "Sat, 12 Nov 2022 17:41:42 UTC"
record: -1
